
; Make sure to read these carefully, and adjust things you want

[fileNaming]
; if true, will output a very specific filename
; format = number + julia coords + posiition coords + limit + frame + zoom
bwMapName = bwMap
informativeName = 0
location = images/
number = 1

; Change this to change the username logged in the image metadata
creatorTag = Ahhhh6980


[main]
; WIP (not ready)
gif = 0
frames = 720

; You can get faster rendering if you first render the BW map
; it is recommended to render a half-res BW map (divisor of 2)
; it will check if the current pixel mapped to the BWmap is black
; if it is black, it wont compute that pixel
; the smaller the image, the more noticeable the quality difference is
; it's actually more reliable quality-wise for very large images 
genBWmap = 0
bwMapResDivisor = 2
; can often times be 40% faster, with a very small amount
; of quality loss at the immediate border of the fractal

; After you have a BWmap rendered, enable this
; disable genBWmap if you're using a BWmap unless you want 
; to generate a higher quality BWmap from the previous one
useBWmap = 0

; Set precision for BW map
; Can set how the amount of pixels around the mapped pixel it will check for white
; 1 for 1 pixel, 2 for current pixel plus adjacent pixels, 3 for current pixel and the 8 surrounding pixels
bwPrecision = 3
; setting this to 3 computes only  20% faster, but the border of the 
; fractal is visually indistinguishable from that of a full render

; For 16:9, 5 gives you a 4800px X 2700px image
; Image size = resolution * 60 * ratio
resolution = 1
ratioX = 16
ratioY = 9

; For images up to or larger than 3840x2160, you may want this to be 4 or 8
; Will split into imageDiv^2 chunks, each being ratioX/imageDiv by ratioY/imageDiv in dimension
imageDiv = 4

; Set either mandelbrot or burning ship to 1 (not both) for a good pre-defined positioning, ratio, and zoom
loadDefaults = 0

isSpecialFractal = 0
isMandelbrot = 1
isBurningShip = 0
; set to 1 for a julia fractal
isJulia = 0

; set to 1 if you want the image to ALWAYS scale the smallest frame size to 1920
; if it's set to 0, it will only scale images with widths or heights that are smaller than 1920, to 1920
scaling = 0


[colors]
; Fancy (and trippy), but slower rendering
fancyColors = 0

; slight color adjustment
cScale = 2
cOffset = 2
colorExponent = 0.05
lightnessExponent = 1.1
lightnessScale = 1

[misc]
; set to z for tetration only works with mandelbrot enabled
exponent = 2

; zoom
zoom = 30

; Iteration limit!
limit = 2500

; rotation in degrees (not radians)
; anglePosX or anglePosY will move image center vertically or horizontally independant of rotation
angle = 0
anglePosX = 0
anglePosY = 0

; complex coordinate to center image on
posX = -0.723
posY = 0.3310
; julia coords
juliaCoordX = 0
juliaCoordY = 0

; specify number of threads to NOT utilize
; 0 will use all of your CPU threads
threadExclude = 1

; specify number of times per segment the terminal will output progress for pixel drawing
; 0 is not a valid number
consoleReadouts = 5

; keep this at 0 if you want to exclude the main cardiod and bulb in a regular Mandelbrot render
; 1 will disable main cardiod and bulb exclusion, which will make the Mandelbrot set render slower
exclude = 0

debug = 0
